module Base
{
	model SC_ChevroletCavalier
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|base_mesh,
		shader = vehicle_norandom_multiuv,
		static = TRUE,
		scale = 1,
	}
	model CavalierDriver
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|DriverSeat_obj,
		shader = vehicleutest,
		scale = 1,
	}
	model CavalierPassenger
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|PassengerSeat_obj,
		shader = vehicleutest,
		scale = 1,
	}
	model CavalierDouble
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|RearDoubleSeat_obj,
		shader = vehicleutest,
		scale = 1,
	}
	model CavalierWindshield
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|Windshield_obj,
		shader = vehicleutest,
		scale = 1,
	}
	model CavalierFrontRightWindow
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|FrontRightWindow_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = FrontRightWindowBone 1.0,
		boneWeight = FrontRightWindowArmorBone 1.0,
	}
	model CavalierFrontLeftWindow
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|FrontLeftWindow_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = FrontLeftWindowBone 1.0,
		boneWeight = FrontLeftWindowArmorBone 1.0,
	}
	model CavalierRearRightWindow
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|RearRightWindow_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = RearRightWindowBone 1.0,
		boneWeight = RearRightWindowArmorBone 1.0,
	}
	model CavalierRearLeftWindow
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|RearLeftWindow_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = RearLeftWindowBone 1.0,
		boneWeight = RearLeftWindowArmorBone 1.0,
	}
	model CavalierFrontRightDoor
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|FrontRightDoor_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = FrontRightDoorBone 1.0,
	}
	model CavalierFrontLeftDoor
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|FrontLeftDoor_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = FrontLeftDoorBone 1.0,
	}
	model CavalierRearRightDoor
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|RearRightDoor_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = RearRightDoorBone 1.0,
	}
	model CavalierRearLeftDoor
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|RearLeftDoor_obj,
		shader = vehicleutest,
		static = FALSE,
		scale = 1,
		boneWeight = RearLeftDoorBone 1.0,
	}
	model CavalierTrunk
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|Trunk_obj,
		shader = vehicleutest,
		scale = 1,
		static = FALSE,
		boneWeight = TrunkBone 1.0,
	}
	model CavalierHood
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|Hood_obj,
		shader = vehicleutest,
		scale = 1,
		static = FALSE,
		boneWeight = HoodBone 1.0,
	}
	model CavalierRearWindshield
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_SC|RearWindshield_obj,
		shader = vehicleutest,
		scale = 1,
	}
	model Cavalierwheelleft
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_LeftWheel,
		texture = vehicles/ChevCava/Vehicle_ChevCava_Wheels,
	}
	model Cavalierwheelright
	{
		mesh = vehicles/Chevrolet/Vehicle_ChevCava_RightWheel,
		texture = vehicles/ChevCava/Vehicle_ChevCava_Wheels,
	}
	vehicle SC_ChevroletCavalier
	{
		mechanicType = 1,
		offRoadEfficiency = 1.5,
		engineRepairLevel = 4,
		playerDamageProtection = 1.3,

		model
		{
			file = SC_ChevroletCavalier,
			scale = 0.6700,
			offset = 0.0000 -0.2239 -0.0448,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_White,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_Black,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_Red,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_DarkBlue,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_LightBlue,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_Silver,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_Tan,
		}

		skin
		{
			texture = Vehicles/ChevCava/Vehicle_ChevCava_Yellow,
		}

		textureMask = Vehicles/ChevCava/Vehicle_ChevCava_mask,
		textureLights = Vehicles/ChevCava/Vehicle_ChevCava_lights,
		textureDamage1Overlay = Vehicles/ChevCava/Vehicle_ChevCava_blood,
		textureDamage2Overlay = Vehicles/ChevCava/Vehicle_ChevCava_blood,
		textureDamage1Shell = Vehicles/ChevCava/Vehicle_ChevCava_scratch,
		textureDamage2Shell = Vehicles/ChevCava/Vehicle_ChevCava_scratch,
		textureRust = Vehicles/ChevCava/Vehicle_ChevCava_rust,

		sound
		{
			engine = VehicleEngineCarNormal,
			engineStart = VehicleEngineCarNormal,
			engineTurnOff = VehicleEngineCarNormal,
			horn = VehicleHornStandard,
			ignitionFail = VehicleIgnitionFailCarNormal,
		}

		extents = 2.1493 1.5821 5.5821,
		mass = 100,
		physicsChassisShape = 2.1493 1.5821 5.5821,
		centerOfMassOffset = 0.0000 0.7910 -0.1493,
		shadowExtents = 2.1529 6.2239,
		shadowOffset = -0.0032 -0.1436,
		engineForce = 5000,
		gearRatioCount = 4,
		maxSpeed = 110f,
		engineLoudness = 100,
		engineQuality = 80,
		brakingForce = 55,
		stoppingMovementForce = 4.0f,
		rollInfluence = 0.95f,
		steeringIncrement = 0.04,
		steeringClamp = 0.3,
		suspensionStiffness = 40,
		suspensionCompression = 3.83,
		suspensionDamping = 2.88,
		maxSuspensionTravelCm = 14,
		suspensionRestLength = 0.20f,
		wheelFriction = 1.4f,
		frontEndHealth = 1500,
		rearEndHealth = 1200,
		seats = 4,

		wheel FrontLeft
		{
			front = true,
			offset = 0.8806 0.2985 1.6418,
			radius = 0.50f,
			width = 0.30f,
		}

		wheel FrontRight
		{
			front = true,
			offset = -0.8806 0.2985 1.6418,
			radius = 0.50f,
			width = 0.30f,
		}

		wheel RearLeft
		{
			front = false,
			offset = 0.8806 0.2985 -1.7015,
			radius = 0.50f,
			width = 0.30f,
		}

		wheel RearRight
		{
			front = false,
			offset = -0.8806 0.2985 -1.7015,
			radius = 0.50f,
			width = 0.30f,
		}

		template = PassengerSeat4,

		passenger FrontLeft
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = 0.4776 0.5522 -0.0896,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 1.4478 -0.4328 0.5075,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontLeft,
			}
		}

		passenger FrontRight
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = -0.4776 0.5522 -0.0896,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -1.4478 -0.4328 0.5075,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatFrontRight,
			}
		}

		passenger RearLeft
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = 0.4776 0.5522 -1.1194,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = 1.4478 -0.4328 -0.6418,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatRearLeft,
			}
		}

		passenger RearRight
		{
			showPassenger = true,
			hasRoof = true,

			position inside
			{
				offset = -0.4776 0.5522 -1.1194,
				rotate = 0.0000 0.0000 0.0000,
			}

			position outside
			{
				offset = -1.4478 -0.4328 -0.6418,
				rotate = 0.0000 0.0000 0.0000,
				area = SeatRearRight,
			}
		}

		area Engine
		{
			xywh = 0.0000 3.3582 2.1493 1.1343,
		}

		area TruckBed
		{
			xywh = 0.0000 -3.5821 2.1493 0.9254,
		}

		area SeatFrontLeft
		{
			xywh = 1.7313 0.3284 1.0448 1.1642,
		}

		area SeatFrontRight
		{
			xywh = -1.7313 0.3284 1.0448 1.1642,
		}

		area SeatRearLeft
		{
			xywh = 1.7313 -0.8358 1.0448 1.1642,
		}

		area SeatRearRight
		{
			xywh = -1.7313 -0.8358 1.0448 1.1642,
		}

		area GasTank
		{
			xywh = -1.7313 -2.2388 1.0448 0.5970,
		}

		area TireFrontLeft
		{
			xywh = 1.0746 1.5970 0.0000 0.0000,
		}

		area TireFrontRight
		{
			xywh = -1.0746 1.5970 0.0000 0.0000,
		}

		area TireRearLeft
		{
			xywh = 1.0746 -1.9851 0.0000 0.0000,
		}

		area TireRearRight
		{
			xywh = -1.0746 -1.9851 0.0000 0.0000,
		}

		template = CavalierAttachments,
		template = Seat/part/SeatFrontLeft,
		template = Seat/part/SeatFrontRight,
		template = Seat/part/SeatRearLeft,
		template = Seat/part/SeatRearRight,
		template = GloveBox,
		template = GasTank,
		template = Battery,
		template = Engine,
		template = Muffler,

		part SeatFrontLeft
		{
			model seatfrontLeft
			{
				file = CavalierDriver,
			}
		}

		part SeatFrontRight
		{
			model seatfrontRight
			{
				file = CavalierPassenger,
			}
		}

		part SeatRearLeft
		{
			model seatrearLeft
			{
				file = CavalierDouble,
			}
		}

		part SeatRearRight
		{
			model seatrearRight
			{
				file = CavalierDouble,
			}
		}

		part Muffler
		{
			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}
		}

		template = EngineDoor,

		part EngineDoor
		{
			model engineDoor
			{
				file = CavalierHood,
			}

			anim Close
			{
				anim = HoodClosing,
				reverse = TRUE,
				rate = 1.5,
			}

			anim Open
			{
				anim = HoodClosing,
				reverse = FALSE,
				rate = 1.0,
			}

			anim Closed
			{
				anim = HoodClosing,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = HoodClosing,
				reverse = TRUE,
				animate = FALSE,
			}

			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}

			itemType = SCKCO.ChevyCavalierHoodSC,
		}

		part Heater
		{
			category = engine,

			lua
			{
				update = Vehicles.Update.Heater,
			}
		}

		template = Windshield/part/Windshield,
		template = Windshield/part/WindshieldRear,

		part Windshield
		{
			model windshieldFront
			{
				file = CavalierWindshield,
			}

			window
			{
				openable = false,
			}

			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}

			lua
			{
				create = Vehicles.Create.Default,
			}

			category = SCUCKwindows,
			itemType = SCKCO.ChevyCavalierWindshieldSC,
		}

		part WindshieldRear
		{
			model windshieldRear
			{
				file = CavalierRearWindshield,
			}

			window
			{
				openable = false,
			}

			table install
			{
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				recipes = Intermediate Mechanics,
			}

			lua
			{
				create = Vehicles.Create.Default,
			}

			category = SCUCKwindows,
			itemType = SCKCO.ChevyCavalierWindshieldSC,
		}

		template = Door/part/DoorFrontLeft,
		template = Door/part/DoorFrontRight,
		template = Door/part/DoorRearLeft,
		template = Door/part/DoorRearRight,
		template = Window/part/WindowFrontLeft,
		template = Window/part/WindowFrontRight,
		template = Window/part/WindowRearLeft,
		template = Window/part/WindowRearRight,

		part WindowFrontRight
		{
			model windowFR
			{
				file = CavalierFrontRightWindow,
			}

			anim ClosedToOpen
			{
				anim = FrontRightWindowClosing,
				animate = FALSE,
			}

			category = SCUCKwindows,
			parent = DoorFrontRight,
			area = SeatFrontRight,
			itemType = SCKCO.ChevyCavalierWindowSC,
		}

		part WindowFrontLeft
		{
			model windowFL
			{
				file = CavalierFrontLeftWindow,
			}

			anim ClosedToOpen
			{
				anim = FrontLeftWindowClosing,
				animate = FALSE,
			}

			category = SCUCKwindows,
			parent = DoorFrontLeft,
			area = SeatFrontLeft,
			itemType = SCKCO.ChevyCavalierWindowSC,
		}

		part WindowRearRight
		{
			model windowRR
			{
				file = CavalierRearRightWindow,
			}

			anim ClosedToOpen
			{
				anim = RearRightWindowClosing,
				animate = FALSE,
			}

			category = SCUCKwindows,
			parent = DoorRearRight,
			area = SeatRearRight,
			itemType = SCKCO.ChevyCavalierWindowSC,
		}

		part WindowRearLeft
		{
			model windowRL
			{
				file = CavalierRearLeftWindow,
			}

			anim ClosedToOpen
			{
				anim = RearLeftWindowClosing,
				animate = FALSE,
			}

			category = SCUCKwindows,
			parent = DoorRearLeft,
			area = SeatRearLeft,
			itemType = SCKCO.ChevyCavalierWindowSC,
		}

		part DoorFrontRight
		{
			model Default
			{
				file = CavalierFrontRightDoor,
			}

			anim Close
			{
				anim = FrontRightDoorClosing,
				reverse = TRUE,
				rate = 2.0,
			}

			anim Open
			{
				anim = FrontRightDoorClosing,
				reverse = FALSE,
				rate = 1.0,
			}

			anim Closed
			{
				anim = FrontRightDoorClosing,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = FrontRightDoorClosing,
				reverse = TRUE,
				animate = FALSE,
			}

			itemType = SCKCO.ChevyCavalierDoorSC,
		}

		part DoorFrontLeft
		{
			model Default
			{
				file = CavalierFrontLeftDoor,
			}

			anim Close
			{
				anim = FrontLeftDoorClosing,
				reverse = TRUE,
				rate = 2.0,
			}

			anim Open
			{
				anim = FrontLeftDoorClosing,
				reverse = FALSE,
				rate = 1.0,
			}

			anim Closed
			{
				anim = FrontLeftDoorClosing,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = FrontLeftDoorClosing,
				reverse = TRUE,
				animate = FALSE,
			}

			itemType = SCKCO.ChevyCavalierDoorSC,
		}

		part DoorRearRight
		{
			model Default
			{
				file = CavalierRearRightDoor,
			}

			anim Close
			{
				anim = RearRightDoorClosing,
				reverse = TRUE,
				rate = 2.0,
			}

			anim Open
			{
				anim = RearRightDoorClosing,
				reverse = FALSE,
				rate = 1.0,
			}

			anim Closed
			{
				anim = RearRightDoorClosing,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = RearRightDoorClosing,
				reverse = TRUE,
				animate = FALSE,
			}

			itemType = SCKCO.ChevyCavalierDoorSC,
		}

		part DoorRearLeft
		{
			model Default
			{
				file = CavalierRearLeftDoor,
			}

			anim Close
			{
				anim = RearLeftDoorClosing,
				reverse = TRUE,
				rate = 2.0,
			}

			anim Open
			{
				anim = RearLeftDoorClosing,
				reverse = FALSE,
				rate = 1.0,
			}

			anim Closed
			{
				anim = RearLeftDoorClosing,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = RearLeftDoorClosing,
				reverse = TRUE,
				animate = FALSE,
			}

			itemType = SCKCO.ChevyCavalierDoorSC,
		}

		template = TrunkDoor,

		part TrunkDoor
		{
			table install
			{
				recipes = Advanced Mechanics,
			}

			table uninstall
			{
				recipes = Advanced Mechanics,
			}

			model Default
			{
				file = CavalierTrunk,
				offset = 0 0 0,
				rotate = 0 0 0,
				scale = 1.0,
			}

			anim Close
			{
				anim = TrunkClosing,
				reverse = TRUE,
				rate = 1.5,
			}

			anim Open
			{
				anim = TrunkClosing,
				reverse = FALSE,
				rate = 1.0,
			}

			anim Closed
			{
				anim = TrunkClosing,
				reverse = FALSE,
				animate = FALSE,
			}

			anim Opened
			{
				anim = TrunkClosing,
				reverse = TRUE,
				animate = FALSE,
			}

			itemType = SCKCO.ChevyCavalierTrunkLidSC,
		}

		template = Trunk/part/TruckBed,
		template = Tire,
		

		part TireFrontLeft
		{
			model InflatedTirePlusWheel
			{
				file = Cavalierwheelleft,
			}
		}

		part TireFrontRight
		{
			model InflatedTirePlusWheel
			{
				file = Cavalierwheelright,
			}
		}

		part TireRearLeft
		{
			model InflatedTirePlusWheel
			{
				file = Cavalierwheelleft,
			}
		}

		part TireRearRight
		{
			model InflatedTirePlusWheel
			{
				file = Cavalierwheelright,
			}
		}

		template = Brake,

		part Brake*
		{
			table install
			{
				skills = Mechanics:4,
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:4,
				recipes = Intermediate Mechanics,
			}
		}

		template = Suspension,

		part Suspension*
		{
			table install
			{
				skills = Mechanics:4,
				recipes = Intermediate Mechanics,
			}

			table uninstall
			{
				skills = Mechanics:4,
				recipes = Intermediate Mechanics,
			}
		}

		template = Radio,
		template = Headlight,

		part PassengerCompartment
		{
			category = nodisplay,

			lua
			{
				update = Vehicles.Update.PassengerCompartment,
			}
		}

		physics box
		{
			offset = 0.0000 0.7910 -0.1493,
			extents = 2.1493 1.5821 5.5821,
			rotate = 0.0000 0.0000 0.0000,
		}

		attachment trailer
		{
			offset = 0.0000 0.3881 -2.8955,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = -1.0000,
		}

		attachment trailerfront
		{
			offset = 0.0000 0.3881 2.5821,
			rotate = 0.0000 0.0000 0.0000,
			zoffset = 1.0000,
		}
	}
}
